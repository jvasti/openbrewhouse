
FILES=$(git diff --cached --name-only --diff-filter=d | grep -E '\.(js|ts|jsx|tsx|svelte|cjs|postcss|json)$')

#!/bin/bash

# Store all modified files
MODIFIED_FILES=$(git diff --cached --name-only --diff-filter=d)

# If no files found, just exit
[ -z "$MODIFIED_FILES" ] && exit 0

# Files for prettier
PRETTIER_FILES=$(grep -E '\.(js|ts|jsx|tsx|svelte|cjs|postcss|json|yml|html)$' <<< "$MODIFIED_FILES")
# Files for eslint
ESLINT_FILES=$(grep -E '\.(js|ts|cjs|svelte|jsx|tsx)$' <<< "$MODIFIED_FILES")

# Check if the 'bun' command is available and set the CMD variable accordingly
if command -v bun &> /dev/null; then
    echo "Using bun..."
    CMD="bunx"
else
    echo "Using node..."
    CMD="npx"
fi

# Run prettier if there are target files for it
if [ ! -z "$PRETTIER_FILES" ]; then
    echo "Prettier target files: $PRETTIER_FILES"
    $CMD prettier --check $PRETTIER_FILES
    if [ $? -ne 0 ]; then
        exit 1
    fi
fi

# Run eslint if there are target files for it
if [ ! -z "$ESLINT_FILES" ]; then
    echo "ESLint target files: $ESLINT_FILES"
    $CMD eslint $ESLINT_FILES
    if [ $? -ne 0 ]; then
        exit 1
    fi
fi

# Run unit tests and exit if they fail
$CMD vitest run
if [ $? -ne 0 ]; then
    exit 1
fi

exit 0
